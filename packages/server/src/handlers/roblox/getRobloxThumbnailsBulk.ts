import axios from "axios"
import { FastifyInstance, FastifyRequest, RouteHandlerMethod } from "fastify"
import { StatusCodes } from "http-status-codes"
import { JSONSchema } from "json-schema-typed"
import authIdentity from "../../auth/authIdentity"
import authPermissions from "../../auth/authPermissions"
import authToken from "../../auth/authToken"

enum RobloxThumbnailType {
	Avatar = "Avatar",
	AvatarHeadShot = "Avatar",
	GameIcon = "GameIcon",
	BadgeIcon = "BadgeIcon",
	GameThumbnail = "GameThumbnail",
	GamePass = "GamePass",
	Asset = "Asset",
	BundleThumbnail = "BundleThumbnail",
	Outfit = "Outfit",
	GroupIcon = "GroupIcon",
	DeveloperProduct = "DeveloperProduct",
	AvatarBust = "AvatarBust",
	AutoGeneratedAsset = "AutoGeneratedAsset",
	PlaceIcon = "PlaceIcon",
}

enum RobloxThumbnailState {
	Error = "Error",
	Completed = "Completed",
	InReview = "InReview",
	Pending = "Pending",
	Blocked = "Blocked",
}

type GetRobloxThumbnailsBulkRequest = FastifyRequest<{
	Body: {
		targetId: number,
		type: RobloxThumbnailType,
		size?: string,
		isCircular?: string,
		format?: string,
		requestId?: string,
		token?: string,
		alias?: string,
	}[],
}>

export default async function(fastify: FastifyInstance) {
	fastify.route({
		url: "/roblox/thumbnails",
		method: "POST",

		schema: {
			body: {
				type: "array",
				items: {
					type: "object",
					properties: {
						targetId: { type: "integer" },
						type: { type: "string", enum: Object.keys(RobloxThumbnailType) },
						size: { type: "string" },
						isCircular: { type: "boolean" },
						format: { type: "string" },
						requestId: { type: "string" },
						token: { type: "string" },
						alias: { type: "string" },
					},
					required: [
						"targetId",
						"type",
					],
					additionalProperties: false,
				},
			} as JSONSchema,

			response: {
				[StatusCodes.OK]: {
					type: "object",
					properties: {
						data: {
							type: "array",
							items: {
								type: "object",
								properties: {
									requestId: { type: ["string", "null"] },
									state: { type: "string", enum: Object.keys(RobloxThumbnailState) },
									errorCode: { type: "integer" },
									errorMessage: { type: "string" },
									targetId: { type: "integer" },
									imageUrl: { type: ["string", "null"], format: "uri" },
								},
								required: [
									"requestId",
									"state",
									"errorCode",
									"errorMessage",
									"targetId",
									"imageUrl",
								],
								additionalProperties: false,
							},
						},
					},
					required: [
						"data",
					],
					additionalProperties: false,
				} as JSONSchema,
			},
		},

		preValidation: fastify.auth([
			authToken(),
			authIdentity(),
			authPermissions("roblox/get/thumbnail/bulk"),
		]),

		handler: async function(request: GetRobloxThumbnailsBulkRequest) {
			const response = await axios.post<{
				data: {
					requestId: string,
					state: RobloxThumbnailState,
					errorCode: number,
					errorMessage: string,
					targetId: number,
					imageUrl: string,
				}[],
			}>("https://thumbnails.roblox.com/v1/batch", request.body)

			console.log(response.data)

			return response.data
		} as RouteHandlerMethod,
	})
}